
running 1 test
test memory::nebula::tests::mem_basic ... FAILED

failures:

---- memory::nebula::tests::mem_basic stdout ----
key len 50
committing to [
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000001,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000a,
    0x000000000000000000000000000000000000000000000000000000000000000b,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000002,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000c,
    0x000000000000000000000000000000000000000000000000000000000000000d,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
] with blind 0x059f927426cd21a4de33b5c63adb50cdc05a139ec5f3e9fc8ab174ce5fc6ef66
CK len 64, V len 50
committing to [
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000001,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000a,
    0x000000000000000000000000000000000000000000000000000000000000000b,
    0x0000000000000000000000000000000000000000000000000000000000000001,
    0x0000000000000000000000000000000000000000000000000000000000000001,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000a,
    0x000000000000000000000000000000000000000000000000000000000000000b,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000002,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000c,
    0x000000000000000000000000000000000000000000000000000000000000000d,
    0x0000000000000000000000000000000000000000000000000000000000000002,
    0x0000000000000000000000000000000000000000000000000000000000000002,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000012,
    0x0000000000000000000000000000000000000000000000000000000000000013,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000004,
    0x0000000000000000000000000000000000000000000000000000000000000004,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000014,
    0x0000000000000000000000000000000000000000000000000000000000000015,
    0x0000000000000000000000000000000000000000000000000000000000000001,
    0x0000000000000000000000000000000000000000000000000000000000000001,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000a,
    0x000000000000000000000000000000000000000000000000000000000000000b,
] with blind 0x17b2f8e7030b718eea563e7e385a3d4f43ddb71a4c017f263d762e1004db739f
CK len 64, V len 50
committing to [
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000003,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000e,
    0x000000000000000000000000000000000000000000000000000000000000000f,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000004,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000010,
    0x0000000000000000000000000000000000000000000000000000000000000011,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
] with blind 0x2b09326ea1a69832094ea7d1e0f19b47459b248ec1406d9d307563b89b74f2e0
CK len 64, V len 50
committing to [
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000003,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000e,
    0x000000000000000000000000000000000000000000000000000000000000000f,
    0x0000000000000000000000000000000000000000000000000000000000000003,
    0x0000000000000000000000000000000000000000000000000000000000000003,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000e,
    0x000000000000000000000000000000000000000000000000000000000000000f,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000004,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000010,
    0x0000000000000000000000000000000000000000000000000000000000000011,
    0x0000000000000000000000000000000000000000000000000000000000000004,
    0x0000000000000000000000000000000000000000000000000000000000000004,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000014,
    0x0000000000000000000000000000000000000000000000000000000000000015,
    0x0000000000000000000000000000000000000000000000000000000000000003,
    0x0000000000000000000000000000000000000000000000000000000000000003,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x000000000000000000000000000000000000000000000000000000000000000e,
    0x000000000000000000000000000000000000000000000000000000000000000f,
    0x0000000000000000000000000000000000000000000000000000000000000002,
    0x0000000000000000000000000000000000000000000000000000000000000002,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000012,
    0x0000000000000000000000000000000000000000000000000000000000000013,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
    0x0000000000000000000000000000000000000000000000000000000000000000,
] with blind 0x2475b12da4a9bc53aa4d1197b39527c5b7b20610831f182d7efbe79bc12a6e01
CK len 64, V len 50
INIT
MemElem ["PRIVATE RAM" [time 0] [addr 0] [vals [
    0,
    0,
]]]
MemElem ["PRIVATE RAM" [time 0] [addr 1] [vals [
    10,
    11,
]]]
MemElem ["PRIVATE RAM" [time 0] [addr 2] [vals [
    12,
    13,
]]]
RW
MemElem ["PRIVATE RAM" [time 0] [addr 1] [vals [
    10,
    11,
]]]
MemElem ["PRIVATE RAM" [time 1] [addr 1] [vals [
    10,
    11,
]]]
MemElem ["PRIVATE RAM" [time 0] [addr 2] [vals [
    12,
    13,
]]]
MemElem ["PRIVATE RAM" [time 2] [addr 2] [vals [
    18,
    19,
]]]
FINAL
MemElem ["PRIVATE RAM" [time 0] [addr 0] [vals [
    0,
    0,
]]]
MemElem ["PRIVATE RAM" [time 4] [addr 4] [vals [
    20,
    21,
]]]
MemElem ["PRIVATE RAM" [time 1] [addr 1] [vals [
    10,
    11,
]]]
IVC OP
0
0
0
0
0
IVC OP
0
1
0
10
11
IVC OP
0
2
0
12
13
IVC OP
0
1
0
10
11
IVC OP
1
1
0
10
11
IVC OP
0
2
0
12
13
IVC OP
2
2
0
18
19
IVC OP
0
0
0
0
0
IVC OP
4
4
0
20
21
IVC OP
1
1
0
10
11
ARK SAT
ram batch size total len 50, final arity 4
CK len 16384, V len 11805
CK len 16384, V len 11805
CK len 16384, V len 11805
==============================================
CK len 16384, V len 11805
CK len 16384, V len 11805
CK len 16384, V len 11805
CK len 16384, V len 11725
INIT
MemElem ["PRIVATE RAM" [time 0] [addr 3] [vals [
    14,
    15,
]]]
MemElem ["PRIVATE RAM" [time 0] [addr 4] [vals [
    16,
    17,
]]]
MemElem ["PRIVATE RAM" [time 0] [addr 0] [vals [
    0,
    0,
]]]
RW
MemElem ["PRIVATE RAM" [time 0] [addr 3] [vals [
    14,
    15,
]]]
MemElem ["PRIVATE RAM" [time 3] [addr 3] [vals [
    14,
    15,
]]]
MemElem ["PRIVATE RAM" [time 0] [addr 4] [vals [
    16,
    17,
]]]
MemElem ["PRIVATE RAM" [time 4] [addr 4] [vals [
    20,
    21,
]]]
FINAL
MemElem ["PRIVATE RAM" [time 3] [addr 3] [vals [
    14,
    15,
]]]
MemElem ["PRIVATE RAM" [time 2] [addr 2] [vals [
    18,
    19,
]]]
MemElem ["PRIVATE RAM" [time 0] [addr 0] [vals [
    0,
    0,
]]]
IVC OP
0
3
0
14
15
IVC OP
0
4
0
16
17
IVC OP
0
0
0
0
0
IVC OP
0
3
0
14
15
IVC OP
3
3
0
14
15
IVC OP
0
4
0
16
17
IVC OP
4
4
0
20
21
IVC OP
3
3
0
14
15
IVC OP
2
2
0
18
19
IVC OP
0
0
0
0
0
ARK SAT
==============================================
CK len 16384, V len 11805
CK len 16384, V len 11805
CK len 16384, V len 11805
CK len 16384, V len 11725
CK len 16384, V len 11805
CK len 16384, V len 11805
CK len 16384, V len 11805
CK len 16384, V len 11725
CK len 16384, V len 11725
CK len 16384, V len 11805
CK len 16384, V len 11805
CK len 16384, V len 11805
CK len 16384, V len 11725
PROVING SHAPE 16384, [
    15,
    35,
    16334,
], WIT 3
CK len 16384, V len 16384
PROVING SHAPE 32768, [
    32768,
], WIT 1
e len 16384
e len 16384
e len 16384
sel len 16384
sel len 16384
sel len 16384
thread '<unnamed>' panicked at /home/jess/Repos/Nova/src/spartan/sumcheck.rs:639:5:
assertion `left == right` failed
  left: 0x08b973535e3aaca5bf7736eecbd05c773d8d3190f8d215f3c1cbfa94b0c7e0ac
 right: 0x2671892960ec57843ee7b47b40518518c5a52f16af8d8029edd182b6cc02624a
stack backtrace:
   0: rust_begin_unwind
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/std/src/panicking.rs:681:5
   1: core::panicking::panic_fmt
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/core/src/panicking.rs:75:14
   2: core::panicking::assert_failed_inner
   3: core::panicking::assert_failed
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/core/src/panicking.rs:364:5
   4: nova_snark::spartan::sumcheck::SumcheckProof<E>::prove_cubic_batch
             at /home/jess/Repos/Nova/src/spartan/sumcheck.rs:639:5
   5: <nova_snark::spartan::snark::RelaxedR1CSSNARK<E,EE> as nova_snark::traits::snark::RelaxedR1CSSNARKTrait<E>>::prove_unsplit_witnesses
             at /home/jess/Repos/Nova/src/spartan/snark.rs:554:45
   6: <nova_snark::spartan::snark::RelaxedR1CSSNARK<E,EE> as nova_snark::traits::snark::RelaxedR1CSSNARKTrait<E>>::prove
             at /home/jess/Repos/Nova/src/spartan/snark.rs:157:36
   7: nova_snark::nova::CompressedSNARK<E1,E2,C,S1,S2>::prove::{{closure}}
             at /home/jess/Repos/Nova/src/nova/mod.rs:823:9
   8: rayon_core::join::join::call::{{closure}}
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/join/mod.rs:102:18
   9: rayon_core::join::join_context::call_a::{{closure}}
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/join/mod.rs:124:17
  10: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/core/src/panic/unwind_safe.rs:272:9
  11: std::panicking::try::do_call
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/std/src/panicking.rs:573:40
  12: std::panicking::try
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/std/src/panicking.rs:536:19
  13: std::panic::catch_unwind
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/std/src/panic.rs:358:14
  14: rayon_core::unwind::halt_unwinding
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/unwind.rs:17:5
  15: rayon_core::join::join_context::{{closure}}
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/join/mod.rs:142:24
  16: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}}
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:522:21
  17: rayon_core::job::JobResult<T>::call::{{closure}}
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/job.rs:218:41
  18: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/core/src/panic/unwind_safe.rs:272:9
  19: std::panicking::try::do_call
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/std/src/panicking.rs:573:40
  20: std::panicking::try
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/std/src/panicking.rs:536:19
  21: std::panic::catch_unwind
             at /rustc/c26db435bf8aee2efc397aab50f3a21eb351d6e5/library/std/src/panic.rs:358:14
  22: rayon_core::unwind::halt_unwinding
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/unwind.rs:17:5
  23: rayon_core::job::JobResult<T>::call
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/job.rs:218:15
  24: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/job.rs:120:32
  25: rayon_core::job::JobRef::execute
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/job.rs:64:9
  26: rayon_core::registry::WorkerThread::execute
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:860:13
  27: rayon_core::registry::WorkerThread::wait_until_cold
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:794:26
  28: rayon_core::registry::WorkerThread::wait_until
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:769:13
  29: rayon_core::registry::WorkerThread::wait_until_out_of_work
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:818:9
  30: rayon_core::registry::main_loop
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:923:5
  31: rayon_core::registry::ThreadBuilder::run
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:53:18
  32: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}}
             at /home/jess/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:98:20
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.


failures:
    memory::nebula::tests::mem_basic

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 10 filtered out; finished in 5.27s

